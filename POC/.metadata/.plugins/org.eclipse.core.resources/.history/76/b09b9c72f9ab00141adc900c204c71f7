package com.market;

import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

/**
 * The DataWarehouse program implements getting data from warehouse and returned it to upstream system
 *
 * @author Ashish Sharma
 * @version 1.0
 * @since 2015-02-03
 */

public class DataWarehouse {

	/**
	 * This method is used to provide items and returned the sum of those items price.
	 * 
	 * @param items This is the only paramter to checkout method which contains items
	 * @return int This returns sum provide items price
	 */
	public Map<String,Integer> getProduct() {
		Properties prop = new Properties();
		InputStream input = null;
		Map<String,Integer> productInfo = new HashMap<String, Integer>();

		try {

			String filename = "config.properties";
			input = getClass().getClassLoader().getResourceAsStream(filename);
			if (input == null) {
				System.out.println("Unable to find property file" + filename);
				return productInfo;
			}

			prop.load(input);

			Enumeration<?> e = prop.propertyNames();
			while (e.hasMoreElements()) {
				String key = (String) e.nextElement();
				String value = prop.getProperty(key);
				Integer price = Integer.parseInt(value);
				PriceRuleEngine priceRuleEngine = new PriceRuleEngine();
				if(priceRuleEngine.applyAllRules(price)){
					productInfo.put(key,price);
				}
				//System.out.println("Key : " + key + ", Value : " + value);
			}
			

		} catch (IOException ex) {
			ex.printStackTrace();
		} finally {
			if (input != null) {
				try {
					input.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		return productInfo;

	}

	public static void main(String args[]) {
		DataWarehouse c = new DataWarehouse();
		c.getProduct();
	}
}
